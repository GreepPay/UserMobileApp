System.register(["./index-legacy-DO0k8sJS.js"],(function(e,t){"use strict";var a;return{setters:[e=>{a=e.W}],execute:function(){e("CameraPreviewWeb",class extends a{async start(e){return new Promise((async(t,a)=>{var i;await navigator.mediaDevices.getUserMedia({audio:!e.disableAudio,video:!0}).then((e=>{e.getTracks().forEach((e=>e.stop()))})).catch((e=>{a(e)}));const s=document.getElementById("video"),o=document.getElementById(e.parent);if(s)a({message:"camera already started"});else{const s=document.createElement("video");s.id="video",s.setAttribute("class",e.className||""),"rear"!==e.position&&s.setAttribute("style","-webkit-transform: scaleX(-1); transform: scaleX(-1);");const r=navigator.userAgent.toLowerCase();if(r.includes("safari")&&!r.includes("chrome")&&(s.setAttribute("autoplay","true"),s.setAttribute("muted","true"),s.setAttribute("playsinline","true")),o.appendChild(s),null===(i=navigator.mediaDevices)||void 0===i?void 0:i.getUserMedia){const i={video:{width:{ideal:e.width},height:{ideal:e.height}}};"rear"===e.position?(i.video.facingMode="environment",this.isBackCamera=!0):this.isBackCamera=!1,navigator.mediaDevices.getUserMedia(i).then((function(e){s.srcObject=e,s.play(),t()}),(e=>{a(e)}))}}}))}async startRecordVideo(){throw this.unimplemented("Not implemented on web.")}async stopRecordVideo(){throw this.unimplemented("Not implemented on web.")}async stop(){const e=document.getElementById("video");if(e){e.pause();const t=e.srcObject.getTracks();for(const e of t)e.stop();e.remove()}}async capture(e){return new Promise((t=>{const a=document.getElementById("video"),i=document.createElement("canvas"),s=i.getContext("2d");let o;i.width=a.videoWidth,i.height=a.videoHeight,this.isBackCamera||(s.translate(a.videoWidth,0),s.scale(-1,1)),s.drawImage(a,0,0,a.videoWidth,a.videoHeight),o=null!=e.quality?i.toDataURL("image/jpeg",e.quality/100).replace("data:image/jpeg;base64,",""):i.toDataURL("image/png").replace("data:image/png;base64,",""),t({value:o})}))}async captureSample(e){return this.capture(e)}async getSupportedFlashModes(){throw new Error("getSupportedFlashModes not supported under the web platform")}async setFlashMode(e){throw new Error("setFlashMode not supported under the web platform")}async flip(){throw new Error("flip not supported under the web platform")}async setOpacity(e){const t=document.getElementById("video");t&&e.opacity&&t.style.setProperty("opacity",e.opacity.toString())}async isCameraStarted(){throw this.unimplemented("Not implemented on web.")}})}}}));
